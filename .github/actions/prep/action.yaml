name: "Determine Branch Name and Set Variables"
description: "Determines the branch name and sets Docker image tags based on the branch or tag."

runs:
  using: "composite"
  steps:
    - name: Determine Branch Name and Set Variables
      id: prep
      shell: bash
      run: |
        if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            if [[ "${GITHUB_REF}" == refs/heads/*/* ]] ; then
                git_branch="${GITHUB_REPOSITORY/docker-/}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
            else
                git_branch=${GITHUB_REF#refs/heads/}
            fi

            case "${git_branch}" in
                "main" | "master" )
                    case "${DISTRO,,}" in
                        "alpine" )
                            if [ "${{ env.ALPINE_VARIANT_LATEST }}" = "${DISTRO_VARIANT}" ]; then
                                image_latest=",${GITHUB_REPOSITORY}:${DISTRO,,}"
                            fi
                        ;;
                        "debian" )
                            if [ "${{ env.DEBIAN_VARIANT_LATEST }}" = "${DISTRO_VARIANT}" ]; then
                                image_latest=",${GITHUB_REPOSITORY}:${DISTRO,,}"
                            fi
                        ;;
                    esac

                    branch_tag="${GITHUB_REPOSITORY}:${DISTRO,,}_${DISTRO_VARIANT,,}${image_latest}"
                ;;
                "develop" )
                    branch_tag="${GITHUB_REPOSITORY}:develop"
                ;;
            esac
        fi

        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            git_tag="${GITHUB_REPOSITORY}:$(echo ${GITHUB_REF}-${DISTRO}_${DISTRO_VARIANT} | sed 's|refs/tags/||g')"
        fi

        if [ -n "${branch_tag}" ] && [ -n "${git_tag}" ]; then
            image_tags=${branch_tag},${git_tag}
        else
            image_tags="${branch_tag}${git_tag}"
        fi

        echo "dockerhub_repo=${GITHUB_REPOSITORY/docker-/}" >> $GITHUB_ENV
        dockerhub_images=$(echo "${image_tags}" | sed "s|${GITHUB_REPOSITORY}|docker.io/${GITHUB_REPOSITORY/docker-/}|g")
        ghcr_images=$(echo "${image_tags}" | sed "s|${GITHUB_REPOSITORY}|ghcr.io/${GITHUB_REPOSITORY}|g")
        echo "container_images=${dockerhub_images},${ghcr_images}" >> $GITHUB_OUTPUT

    - name: Label
      id: Label
      shell: bash
      run: |
        image_name=${GITHUB_REPOSITORY/docker-/}
        if [ -f "${{ env.build_file }}" ] ; then
            sed -i \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.git_commit=\"${GITHUB_SHA}\"" \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.git_committed_by=\"${GITHUB_ACTOR}\"" \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.distro=\"${DISTRO}\"" \
                    -e "/FROM .*/a LABEL tiredofit.${image_name}.distro_variant=\"${DISTRO_VARIANT}\"" \
                    -e "/FROM .*/a LABEL org.opencontainers.image.source https://github.com/${GITHUB_REPOSITORY}" \
                    -e "s|\"Base\"|\"Base ${DISTRO}_${DISTRO_VARIANT}\"|" \
                  ${{ env.build_file }}


            if [ -f "CHANGELOG.md" ] ; then
                sed -i "/FROM .*/a LABEL tiredofit.${image_name}.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" ${{ env.build_file }}
                mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
                sed -i "/FROM .*/a LABEL tiredofit.${image_name}.git_tag=\"${GITHUB_REF#refs/tags/v}\"" ${{ env.build_file }}
            fi

           if [[ $GITHUB_REF == refs/heads/* ]]; then
                sed -i "/FROM .*/a LABEL tiredofit.${image_name}.git_branch=\"${GITHUB_REF#refs/heads/}\"" ${{ env.build_file }}
            fi
        fi

        cat Dockerfile